---
# Tasks file for ServiceRestarter
- name: Select random host from play_hosts
  set_fact:
    random_host: "{{ play_hosts | random }}"
  run_once: yes

- set_fact:
    log_msg: "Current iteration is {{ current_iteration }} and is executing on {{ random_host }}"

- debug:
    msg: "Current iteration is {{ current_iteration }} and is executing on {{ random_host }}"
  run_once: yes
  when: debug == True

- name: Log message to file
  shell: echo "$(date '+%F %T %Z') Current iteration is {{ current_iteration }} and is executing on {{ random_host }} >> /tmp/service_restarter.log"
  run_once: yes
  when: logging == True

- name: Stop service
  service:
    name: "{{ service_name }}"
    state: stopped
  delegate_to: "{{ random_host }}"
  run_once: yes

- name: Wait for interval
  pause:
    seconds: "{{ 1st_interval }}"
  delegate_to: "{{ random_host }}"
  run_once: yes

- name: Start service
  service:
    name: "{{ service_name }}"
    state: started
  delegate_to: "{{ random_host }}"
  run_once: yes

# Perhaps wait_for file later on?
- name: Wait for the service port to become available
  wait_for:
    host: "{{ random_host }}"
    port: "{{ service_port }}"
    delay: "{{ port_delay }}"
    timeout: "{{ wait_for_timeout }}"
  delegate_to: "{{ random_host }}"
  run_once: yes

- name: Wait for second defined interval.
  pause:
    seconds: "{{ 2nd_interval }}"
  delegate_to: "{{ random_host }}"
  run_once: yes
